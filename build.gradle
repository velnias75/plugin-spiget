/*
 * Add to your build.gradle-dependencies:
 *
 * implementation(project(path: ':spiget', configuration: 'shadow')) {
 *		exclude group:'dev.derklaro.spiget'
 *	}
 *	
 *	shadow(project(':spiget'))
 */

plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

apply plugin: 'java-library'

archivesBaseName = 'spiget'

configurations {
    testRuntime.extendsFrom compileOnly
}

repositories {
	mavenLocal()
	
	maven { url = uri("https://repo.papermc.io/repository/maven-public/") }
	
	mavenCentral()
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

dependencies {

	implementation("dev.derklaro.spiget:http-java8:${project.spiget_version}")
	shadow("dev.derklaro.spiget:http-java8:${project.spiget_version}") 
	
	implementation("dev.derklaro.spiget:mapper-gson:${project.spiget_version}") {
		exclude group:"com.google.code.gson", module:"gson"
	}
	
	shadow("dev.derklaro.spiget:mapper-gson:${project.spiget_version}")
	
	compileOnly("net.md-5:bungeecord-chat:${bungeecord_chat_version}") {
		exclude group:"org.hamcrest",  module:"hamcrest-core"
	}
	
	testImplementation("org.junit.jupiter:junit-jupiter-api:${project.junit_version}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${project.junit_version}")
    
    testImplementation("dev.derklaro.spiget:http-java8:${project.spiget_version}")
	testImplementation("dev.derklaro.spiget:mapper-gson:${project.spiget_version}")
 
	testImplementation("net.md-5:bungeecord-chat:${bungeecord_chat_version}") {
		exclude group:"org.hamcrest",  module:"hamcrest-core"
	}
    testRuntimeOnly("com.google.guava:guava:${project.guava_version}")

}

shadowJar {

	archiveClassifier.set('')
    
    relocate 'dev.derklaro.spiget', 'de.rangun.spiget.shadowed.dev.derklaro.spiget'

    exclude 'META-INF/**'
    exclude 'license.txt'
    
    // excluding to get the shadowed jar smaller
    // https://github.com/derklaro/java-spiget-client/issues/11#issuecomment-1152076799
    
    exclude 'dev/derklaro/spiget/request/author/*'
    exclude 'dev/derklaro/spiget/request/category/*'
    exclude 'dev/derklaro/spiget/request/status/*'
    exclude 'dev/derklaro/spiget/request/webhook/*'
    exclude 'dev/derklaro/spiget/request/resource/F*'
    exclude 'dev/derklaro/spiget/request/resource/Las*'
    exclude 'dev/derklaro/spiget/request/resource/N*'
    exclude 'dev/derklaro/spiget/request/resource/P*'
    exclude 'dev/derklaro/spiget/request/resource/ResourceA*'
    exclude 'dev/derklaro/spiget/request/resource/ResourceDo*'
    exclude 'dev/derklaro/spiget/request/resource/ResourceL*'
    exclude 'dev/derklaro/spiget/request/resource/ResourceR*'
    exclude 'dev/derklaro/spiget/request/resource/ResourceS*'
    exclude 'dev/derklaro/spiget/request/resource/ResourceU*'
    exclude 'dev/derklaro/spiget/request/resource/ResourceVersionD*'
    exclude 'dev/derklaro/spiget/request/resource/ResourceVersions*'
    exclude 'dev/derklaro/spiget/request/resource/V*'
    exclude 'dev/derklaro/spiget/data/*'
    exclude 'dev/derklaro/spiget/model/A*'
    exclude 'dev/derklaro/spiget/model/C*'
    exclude 'dev/derklaro/spiget/model/Rev*'
    exclude 'dev/derklaro/spiget/model/S*'
    exclude 'dev/derklaro/spiget/model/U*'
    exclude 'dev/derklaro/spiget/model/VersionR*'
    exclude 'dev/derklaro/spiget/model/W*'
    
    minimize()
}

assemble {
	dependsOn shadowJar
}

test {
	
	mustRunAfter(jar)
	dependsOn(shadowJar)
	
	classpath = project.sourceSets.test.output + configurations.testRuntimeClasspath + files(shadowJar.archiveFile)
	
	useJUnitPlatform()
}
